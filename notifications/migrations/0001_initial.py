# Generated by Django 5.2.4 on 2025-09-02 15:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0006_make_tenant_nullable_for_tests'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('appointment_created', 'Agendamento Criado'), ('appointment_cancelled', 'Agendamento Cancelado'), ('appointment_reminder', 'Lembrete de Agendamento'), ('appointment_completed', 'Agendamento Concluído'), ('payment_received', 'Pagamento Recebido'), ('system', 'Notificação do Sistema')], help_text='Tipo da notificação', max_length=30)),
                ('title', models.CharField(help_text='Título da notificação', max_length=255)),
                ('message', models.TextField(help_text='Conteúdo da notificação')),
                ('is_read', models.BooleanField(default=False, help_text='Se a notificação foi lida')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Dados adicionais da notificação (appointment_id, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='Quando a notificação foi lida', null=True)),
                ('tenant', models.ForeignKey(help_text='Tenant ao qual a notificação pertence', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='users.tenant')),
                ('user', models.ForeignKey(help_text='Usuário que recebe a notificação', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant', 'user', '-created_at'], name='notificatio_tenant__6ae88e_idx'), models.Index(fields=['tenant', 'user', 'is_read'], name='notificatio_tenant__5bddd7_idx'), models.Index(fields=['tenant', 'notification_type'], name='notificatio_tenant__127235_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('web', 'Web Push'), ('mobile', 'Mobile Push (Expo)')], help_text='Tipo do dispositivo (web/mobile)', max_length=10)),
                ('token', models.TextField(help_text='Token do dispositivo para push notifications')),
                ('is_active', models.BooleanField(default=True, help_text='Se o device está ativo para receber notificações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(help_text='Tenant ao qual o device pertence', on_delete=django.db.models.deletion.CASCADE, related_name='notification_devices', to='users.tenant')),
                ('user', models.ForeignKey(help_text='Usuário dono do device', on_delete=django.db.models.deletion.CASCADE, related_name='notification_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['tenant', 'user', 'device_type'], name='notificatio_tenant__67e5c0_idx'), models.Index(fields=['tenant', 'is_active'], name='notificatio_tenant__9ec41b_idx')],
                'unique_together': {('user', 'device_type', 'token')},
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('in_app', 'In-App'), ('push_web', 'Web Push'), ('push_mobile', 'Mobile Push'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp')], help_text='Canal de envio da notificação', max_length=15)),
                ('notification_type', models.CharField(help_text='Tipo da notificação (mesmo do Notification)', max_length=30)),
                ('title', models.CharField(help_text='Título da notificação enviada', max_length=255)),
                ('message', models.TextField(help_text='Conteúdo da notificação enviada')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('sent', 'Enviado'), ('delivered', 'Entregue'), ('failed', 'Falhou'), ('skipped', 'Pulado')], default='pending', help_text='Status do envio', max_length=15)),
                ('error_message', models.TextField(blank=True, help_text='Mensagem de erro (se houver)', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Dados adicionais (device_token, provider_response, etc.)')),
                ('sent_at', models.DateTimeField(blank=True, help_text='Quando foi enviado', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Quando foi entregue (se disponível)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(help_text='Tenant da notificação', on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='users.tenant')),
                ('user', models.ForeignKey(help_text='Usuário destinatário', on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant', 'channel', '-created_at'], name='notificatio_tenant__11af92_idx'), models.Index(fields=['tenant', 'user', '-created_at'], name='notificatio_tenant__b45a6f_idx'), models.Index(fields=['tenant', 'status', 'channel'], name='notificatio_tenant__45713a_idx'), models.Index(fields=['created_at'], name='notificatio_created_01830a_idx')],
            },
        ),
    ]
