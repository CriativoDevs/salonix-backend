# =====================================================
# SALONIX BACKEND - CONFIGURAÇÃO DE AMBIENTE
# =====================================================
# Este arquivo documenta todas as variáveis de ambiente utilizadas pelo sistema.
# Copie este arquivo para .env e ajuste os valores conforme necessário.
#
# IMPORTANTE: 
# - Nunca commite o arquivo .env com dados reais
# - Use valores seguros em produção
# - Todas as variáveis têm valores padrão, exceto as marcadas como OBRIGATÓRIAS
# =====================================================

# =====================================================
# AMBIENTE E DEBUG
# =====================================================

# Ambiente de execução (dev, uat, prod)
# Afeta configurações de logging, debug e segurança
DJANGO_ENV=dev

# Habilita modo debug (NUNCA usar true em produção)
# Valores aceitos: true, false, 1, 0, yes, no, on, off
DEBUG=true

# =====================================================
# SEGURANÇA
# =====================================================

# Chave secreta do Django (OBRIGATÓRIA EM PRODUÇÃO)
# Use: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=dev-secret-key-change-me-in-production

# Hosts permitidos (separados por vírgula)
# Em produção, liste apenas os domínios reais
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# =====================================================
# BANCO DE DADOS
# =====================================================

# URL de conexão com o banco de dados
# Formato: postgresql://user:password@host:port/database
# Para desenvolvimento local: sqlite:///./db.sqlite3
# Para PostgreSQL: postgresql://user:pass@localhost:5432/salonix_db
DATABASE_URL=sqlite:///./db.sqlite3

# =====================================================
# CACHE E REDIS
# =====================================================

# URL de conexão com cache/Redis
# Para desenvolvimento local: locmem://
# Para Redis: redis://localhost:6379/0
# Para Redis com senha: redis://:password@localhost:6379/0
CACHE_URL=locmem://

# TTL (Time To Live) para cache de relatórios em segundos
TTL_OVERVIEW_JSON=30
TTL_TOP_SERVICES_JSON=30
TTL_REVENUE_JSON=30
TTL_OVERVIEW_CSV=60
TTL_TOP_SERVICES_CSV=60
TTL_REVENUE_CSV=60

# =====================================================
# AUTENTICAÇÃO JWT
# =====================================================

# Tempo de vida do token de acesso (em minutos)
JWT_ACCESS_MIN=60

# Tempo de vida do token de refresh (em dias)
JWT_REFRESH_DAYS=7

# =====================================================
# EMAIL
# =====================================================

# Backend de email
# Para desenvolvimento: django.core.mail.backends.console.EmailBackend
# Para produção SMTP: django.core.mail.backends.smtp.EmailBackend
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# Configurações SMTP (necessárias apenas se usar SMTP backend)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=true
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL=no-reply@yourdomain.com

# =====================================================
# STRIPE (PAGAMENTOS)
# =====================================================

# Chaves da API Stripe (OBRIGATÓRIAS PARA PAGAMENTOS)
# Teste: sk_test_... / Produção: sk_live_...
STRIPE_API_KEY=sk_test_your_stripe_secret_key_here

# Webhook secret do Stripe (OBRIGATÓRIO PARA WEBHOOKS)
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# IDs dos preços/produtos no Stripe
STRIPE_PRICE_BASIC_MONTHLY_ID=price_basic_monthly_id_from_stripe
STRIPE_PRICE_STANDARD_MONTHLY_ID=price_standard_monthly_id_from_stripe
STRIPE_PRICE_PRO_MONTHLY_ID=price_pro_monthly_id_from_stripe
STRIPE_PRICE_ENTERPRISE_MONTHLY_ID=price_enterprise_monthly_id_from_stripe
STRIPE_TRIAL_DAYS=14

# URLs de redirecionamento após checkout
STRIPE_SUCCESS_URL=http://localhost:3000/billing/success?session_id={CHECKOUT_SESSION_ID}
STRIPE_CANCEL_URL=http://localhost:3000/billing/cancel
STRIPE_PORTAL_RETURN_URL=http://localhost:3000/billing

# Versão da API Stripe (opcional, usa a padrão da conta)
STRIPE_API_VERSION=2024-06-20

# =====================================================
# THROTTLING E RATE LIMITING
# =====================================================

# Limite de requisições para relatórios
# Formato: número/período (ex: 60/min, 1000/hour, 10/day)
REPORTS_THROTTLE_REPORTS=60/min
REPORTS_THROTTLE_EXPORT_CSV=5/min

# Limites de endpoints self-service (produção)
# Em dev/test, os defaults no settings são mais altos para não interferir.
USERS_AUTH_THROTTLE_LOGIN=10/min
USERS_AUTH_THROTTLE_REGISTER=5/min
USERS_TENANT_META_PUBLIC=60/min

# =====================================================
# CAPTCHA (SELF-SERVICE)
# =====================================================

# Habilita captcha para login/registro self-service
# Em dev/test, mantenha false e use bypass se necessário
CAPTCHA_ENABLED=false

# Provider de captcha: turnstile (Cloudflare) ou hcaptcha
CAPTCHA_PROVIDER=turnstile

# Chave secreta do provider (produção)
CAPTCHA_SECRET=

# Token de bypass para dev/smoke (enviar header X-Captcha-Token)
CAPTCHA_BYPASS_TOKEN=

# =====================================================
# PAGINAÇÃO DE RELATÓRIOS
# =====================================================

# Limite padrão de itens por página
REPORTS_DEFAULT_LIMIT=50

# Limite máximo de itens por página
REPORTS_MAX_LIMIT=500

# =====================================================
# OBSERVABILIDADE E LOGS
# =====================================================

# Habilita métricas e observabilidade (Prometheus)
# Valores aceitos: true, false
OBSERVABILITY_ENABLED=true

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# Em produção, use INFO ou WARNING
LOG_LEVEL=INFO

# Formato de log (json, dev, simple)
# json: Logs estruturados em JSON para produção
# dev: Logs coloridos e legíveis para desenvolvimento
# simple: Logs simples em texto
LOG_FORMAT=dev

# Arquivo de log (opcional)
# Se especificado, logs também serão salvos em arquivo rotativo
# Exemplo: /var/log/salonix/app.log
LOG_FILE=

# =====================================================
# DESENVOLVIMENTO LOCAL
# =====================================================
# As configurações abaixo são úteis apenas para desenvolvimento local

# Para usar PostgreSQL local:
# DATABASE_URL=postgresql://postgres:password@localhost:5432/salonix_dev

# Para usar Redis local:
# CACHE_URL=redis://localhost:6379/0

# Para usar Mailhog (servidor de email local):
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=localhost
# EMAIL_PORT=1025
# EMAIL_USE_TLS=false

# =====================================================
# PRODUÇÃO
# =====================================================
# Configurações recomendadas para produção:

# DJANGO_ENV=prod
# DEBUG=false
# SECRET_KEY=sua-chave-super-secreta-aqui
# ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
# DATABASE_URL=postgresql://user:pass@db-host:5432/salonix_prod
# CACHE_URL=redis://redis-host:6379/0
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# STRIPE_API_KEY=sk_live_...
# LOG_LEVEL=WARNING
# OBSERVABILITY_ENABLED=true

# =====================================================
# NOTAS IMPORTANTES
# =====================================================
# 1. Sempre use HTTPS em produção
# 2. Configure um domínio real em ALLOWED_HOSTS
# 3. Use PostgreSQL em produção (não SQLite)
# 4. Configure backup automático do banco de dados
# 5. Use Redis para cache em produção
# 6. Configure monitoramento (logs, métricas)
# 7. Teste todas as configurações em ambiente de staging primeiro
# =====================================================
